Dev Log 

Paper Guidelines
	pencil = normal text 
	dark blue = notes 
	pink = corrections
	NOTE: Green and orange were used interchangeably as notes/corrections up until near the bottom of pg 2

Key
	Adapter = RecyclerViewAdapter 
	Frag = RecyclerViewFrag
	Holder = RecyclerViewHolder 
	AlarmCreator = AlarmCreatorActivity
	ListableEditor = ListableEditorActivity
	alarm_editor = activity_alarm_editor
	folder_editor = activity_folder_editor
	ONCE_ABS = REPEAT_ONCE_ABS
	ONCE_REL = REPEAT_ONCE_REL
	DAY_WEEKLY = REPEAT_DAY_WEEKLY
	DATE_MONTHLY = REPEAT_DATE_MONTHLY
	DATE_YEARLY = REPEAT_DATE_YEARLY
	OFFSET = REPEAT_OFFSET


2021/03/22
	added onClick listener for Holder (made RecyclerView items clickable)
	added android:background attribute to the custom Button style (makes the clicking look nicer)
	added a couple of attributes to the CardView in recycler_view_item (makes clicking look nicer)
	created "ToDo List.txt" and "Dev Log.txt"
	implemented editing alarms in AlarmCreator:saveAlarm() 
	added another extra to send to AlarmCreator (EXTRA_REQ_ID)
	commented out (not deleted) the update() method for Frag 
	added Frag:editAlarm(), doesn't take AlarmGroups into account
	added documentation to Frag:addAlarm()
	removed margins from the recycler_view_item CardViews (didn't eliminate spacing, just reduced it)
	deleted cardMarginSize (a dimen)
	edited MainActivity:onActivityResult() documentation 
	matched AlarmCreator's alarm name field with the input alarm (for REQ_EDIT_ALARM)
	added style for TimePickers 
	tested whether all constraints would still be valid for alarmNameText (margin between it and top) and alarmNameInput (baselines line up) if alarmNameInput was the one defining the height of the pair (it does)
	added layout_marginTop to CreatorInputStyle (style) 

2021/03/23
	testind different button attributes to get colored backgrounds back 
		experimented with putting selectableItemBackground on foreground (highlights entire box), backgroundTint (crashes), originally on background (no background color)
	added cornerRadius dimen 
	added bordered_ripple drawable to solve the borderless button issue
	made the navigation bar and status bar translucent (in theme, added android:windowTranslucentNavigation and android:windowTranslucentStatus)
		issue: makes the layout disregard the status bar, so part of the TextClock text is obscured by the status bar 
		same issue occurs if we color the status bar some color (android:statusBarColor instead of translucent)
		commented out all items that made this issue 

2021/03/24
	edited ToDo list 
	added android:fitsSystemWindows = true to theme and uncommented translucent navigation/status bar attributes
	made the background of the app black (night theme) via android:colorBackground
	created AlarmGroup class 
		overrode all necessary Listable methods
		added a TAG and some private fields (name, isOn, listablesInside, totalNumItems)
		added constructors, getter/setter methods 
		deleted parts of the ToDo list item, edited other parts 
	changed the names of some fields in Alarm (alarmVibrateOn, alarmSoundOn, alarmOn)
	added clone() func to Listable (also in Object but optional) 
		now makes the method public and required instead of optional for implementing classes
		added clone() to Alarm and AlarmGroup (both deep copies)
	deleted getAlarmName() and isAlarmOn() (both already commented out) from Alarm 
	created turnOn() and turnOff() in place of Alarm:setAlarmOn()
	simplified Frag:refreshAlarms() and removed refreshTime() from Listable and implementers 
		data itself didn't need to change, just needed to rebind to get the correct time string
	renamed AlarmCreator to ListableEditor (it creates alarms and folders and edits them too)
		also renamed the relevant strings and XML layout file (maybe not a good idea b/c thinking of making another layout just for folders)
	added an ImageView to recycler_view_item with corresponding logic in Holder
		added image_view field (+ initialization and getter)
		added Alarm vs AlarmGroup check in changeListable to hide/show the icon and time text 
	added totalNumItems field into AlarmGroup 
	added getNumItems() in Listable (+implementations in Alarm and AlarmGroup)
	added toggleActive() in Alarm (toggles whether the alarm is on or off)
	added some ToDo notes in code (ListableEditor, Adapter)
	added some headings for method groups
		also made everything consistent (headings are Title Case and have empty lines before and after)
	deleted the update data testing (previously commented out)
	changed MainActivity:editExistingAlarm to editExistingListable, changed param from Alarm to Listable, and put in logic to accept folders 
	added new REQ ids (EDIT_FOLDER, NEW_FOLDER)
	changed EXTRA names (EXTRA_ALARM to EXTRA_LISTABLE, EXTRA_ALARM_INDEX to EXTRA_LISTABLE_INDEX)
	changed Adapter:getItemCount() to support AlarmGroups

2021/03/25
	changed isOn (Alarm, AlarmGroup, Listable) to isActive
	implemented toString() for AlarmGroup (sorta)
	made the distinction between edit strings and store strings (different for AlarmGroups)
	added toEditString() and toStoreString() in Listable (and implementers)
	moved (and renamed) toString() in Alarm up to header for "Methods from Listable"
	added section "Store Strings" to paper pg 1
	edited ToDo list 
	started labelling AlarmApp papers
	started paper pg 2 to address the nesting problem 
	created datasetLookup field in Adapter 
	changed AlarmGroup:listablesInside field into an ArrayList<Listable>
	created generateLookup() in AlarmGroup
		added documentation too 
		made it public and static to allow Adapter to use it too 
	implemented Adapter:findIndents() 
		implemented helpers findOuterListableIndex() and findIndents() (overloaded)
		added listablesLookup field to AlarmGroup
		added getters & setters for Listables within AlarmGroup's two ArrayLists
	created totalNumItems in Adapter
	renamed ExampleUnitTest to AlarmGroupUnitTest and added a couple unit tests (testing adding listables and lookup lists)
	created the appTesting config (just enables logcat settings)
	made findOuterListableIndex static and made a unit test for it 
	created getListableAtAbsIndex() + static helper (overloaded)
		created a unit test for the static helper 

2021/03/26
	edited ToDo list
	created & tested a while loop implementation for Adapter:getListableAtAbsIndex()
	funky problem with two of the same alarm showing up on the screen
		removing the doubled alarm breaks the app 
		class casting error, Alarm --> AlarmGroup, means wrong flow in getListableAtAbsIndex()
		realized that AlarmGroup.getSizeOfList() includes the parent object (changed that and added some documentation to the method)
	deleted the original function of getListableAtAbsIndex() (not needed)
		transferred the while loop implementation to the helper
		changed signature a little (explicitly give ArrayLists instead of an AlarmGroup)
	added documentation to getListableAtAbsIndex()
	renamed findIndents() to getNumIndents() in Adapter, made it static and replaced with while loop implementation
		also created a unit test for it 
	fixed some issues with AlarmGroup:addListable()  
		totalNumItems was only incrementing, not adding based on # of items added
		the newest listableLookup index should've only been based on total number of items (it's an absolute index) and didn't require an if statement
	implemented indentation of alarms based on folders (Adapter)
	created borderless_ripple (drawable) and ButtonStyle.Borderless (style)
	can't change the color of button background (material buttons ignore the background attribute...?) so changed buttons to android.widget.Button instead (and ImageButtons to android.widget.ImageButton)
	added top toolbar (activity_main)
	added ButtonStyle.ImageView and ButtonStyle.ImageView.Borderless
	changed Frag:initData() to be static and return the data instead of storing it in a field 
		also deleted the DATA field as well as the DATA_ALREADY_INIT field (pointed things to the Adapter)
	added documentation to Frag:addListable() and Frag:editAlarm()
	created Adapter:getParentListableAtAbsIndex() and getListableIndexAtAbsIndex()
		also made unit tests for each of them 
	implemented lookups recalculation for AlarmGroup:setListable()
	created Adapter:setListableAbs() and setListableRel()
	implemented REQ_NEW_FOLDER and REQ_EDIT_FOLDER behaviors in MainActivity:onActivityResult()
	renamed field ListableEditor:workingAlarm to workingListable

2021/03/27
	changed ListableEditor:workingListable to be of type Listable 
		casted things that needed Alarm-specific or AlarmGroup-specific methods 
	created Listable:fromEditString() and Listable:fromStoreString() + implementations
		later deleted and made the mirrored static methods of the same name (for each implementation)
	deleted alarm storage strings (weren't being used, required a context to access)
		created static ints representing stored text for Alarm repeat types
	checked for null Listables in AlarmGroup:addListable(), won't add if null 
	checked for out of bounds index and null Listable in AlarmGroup:setListable()
	checked for null or empty string in AlarmGroup:setAlarmGroupName() and Alarm:setAlarmName()
	added Listable:setListableName() and renamed some methods in implementations to fit
	checked for null Calendar in Alarm:setAlarmTimeCalendar()
	checked for null repeat type in Alarm:setAlarmRepeatType()
	added some checks in AlarmGroup:fromEditString() and fromStoreString()
	split Alarm:fromString() into Alarm:fromEditString() and Alarm:fromStoreString() (minor differences)
	added documentation to and checked for out of bounds index in AlarmGroup:getListable() 
	moved all the AlarmGroup traversal methods (originally in Adapter) to AlarmGroup
		also moved all the related unit tests to AlarmGroupUnitTest and deleted AdapterUnitTest
	created tests for edit and store strings, for both Alarms and AlarmGroups (all in AlarmGroupUnitTest)
	added ListableEditor:isEditingAlarm (shows whether we're editing an alarm or folder)
	made ListableEditor support AlarmGroups and tested 
	added ListableEditor:isEditing (shows whether we're making a new Listable or editing one)
	converted ListableEditor:startedState into a local variable (isEditingAlarm and isEditing cover all possible combinations of startedState)
	moved initialization of Frag:myAdapter to onCreate instead of onCreateView (not necessarily called immediately after initialization, but we needed data loaded)
	created activity_listable_editor_alarmgroup and renamed the original to activity_listable_editor_alarm
		renamed them to activity_alarm_editor and activity_folder_editor
	changed ListableEditor:onCreate() to allow both content views to be used, based on req code 
	fixed issues with ListableEditor crashing
		was trying to query some UI components when the content view hadn't been set yet
		made a second switch statement also based on startedState (for variable setup vs UI setup)
	edited strings to make the distinction between alarm and folder editor (and shared strings)
		also deleted some unnecessary strings (editor_time_text)
	renamed ListableEditor:alarmIndex to listableIndex and made sure that REQ_EDIT_FOLDER retrieved the index (was causing some issues before)
	renamed some ids in activity_folder_editor to start with "folder" instead of "alarm" (duplicate IDs are suspected to be the cause of the names of folders not saving)
		was not the case, actually the setListableName() method just returns without doing anything silently
		hasn't been fixed yet

2021/03/28
	debugged AlarmGroup:setListableName() (was checking whether name was empty, not newName)
		fixed issue with creating new folders, still have issues renaming folders
	deleted testing section adding indents to cards (Adapter)
	if no accepted request code given, ListableEditor will click the back button (and exit)
	added section "Nesting Operations" to paper pg 2
	updated totalNumItems in AlarmGroup:setListable() and Adapter:setListableRel()
		THAT FIXED IT!!!

	made data change notification more specific in Frag:addListable() and Frag:editListable()
	added check for null Listable in Frag:addListable() and changed the documentation
	edited ToDo list 
	checked for invalid strings in Alarm:fromEditString()
	made alarm time strings all lowercase 
	renamed Frag:setListable() to replaceListable()
	created Adapter:getListable()
	added error messages to:
		fromEditString() and fromStoreString() from Alarms and AlarmGroups
		Frag:addListable() and replaceListable()
		AlarmGroup:getListable() and setListable()
		static methods in AlarmGroup (all the searching ones)
		MainActivity:onActivityResult()
	added documentation to Adapter:getListable()
	deleted field Frag:myLayoutManager (was already commented out) and myRecyclerView (converted to local variable)
	added section "Time Storage (Alarms)" to paper pg 2 (didn't finish)
	added new RepeatType idea to paper pg 1 (PER_DAY_MONTHLY)

2021/03/31
	finished section "Time Storage (Alarms)" on paper pg 2

2021/04/01
	renamed Alarm fields so they don't have the word "alarm" preceding them 
	added some things to Alarm:alarmTime javadoc comment 
	added some separators in Alarm fields (separated static fields vs instance fields)
	changed Alarm's class documentation 
	added fields relating to the repeat type of the Alarm in Alarm 
	added Alarm:NUM_REPEAT_TYPES to make it easier to validate repeat type data 
	wrote some notes on paper pg 2 in "Time Storage (Alarms)"
	edited ToDo list 
	deleted RepeatType enum and renamed the stored text ints to just the name of the repeat type 
	added PER_DAY_MONTHLY to set of repeat types
	added "REPEAT_" to the front of each Alarm repeat type constant (in case there are other constants)
	added getters and setters for the new Alarm fields (the ones for repeat types)
	deleted Alarm:repeatDay and repeatWeek (Alarm:time can store that, so they are unnecessary)
	implemented a spinner for selecting repeat type (ListableEditor)
	added string editor_repeat_type_text
	added label for the repeat type spinner (activity_alarm_editor)
	added constraints to new elements (activity_alarm_editor)
	tested using Widget.MaterialComponents.CardView 
		don't like the way it animates the cards (it gets a blue shadow thing that follows it, kinda weird)
		does work with dark/light view, wouldn't need separate styles (but I still don't like it...)
	tested what attributes affects CardView background
		in theme: tested colorSurface (failed), cardBackgroundColor (failed), app:cardBackgroundColor (failed, doesn't compile), card_view:cardBackgroundColor (failed, doesn't compile)
		tested colorSurface in theme + adding card_view:cardBackgroundColor to card (success!)
	renamed some colors (made them more descriptive)
	added colorSurface to the light mode theme 
	added more strings to alarm_repeat_strings (strings for the repeat type spinner)
	deleted the night vs notnight color resource files (now all one file)

2021/04/02
	started blocking out what is needed in ListableEditor:onItemSelected()
	made Alarm repeat constants public (so ListableEditor could access them)
	added ListableEditor:exitActivity() 
	implemented Alarm:getRepeatString() for REPEAT_ONCE_ABS 
	made all Alarm creation require a context (needed for getRepeatString())
		had to also make AlarmGroup creation require a context (because it makes Alarms)
		made some default constructors to delete later (use ONLY for testing)
	fixed some issues with the AlarmGroupUnitTest class (had old way for how to set repeat types)
	edited ToDo list 
	created activity_alarm_editor_copy to test using nested LinearLayouts instead of ConstraintLayout
	added some margins to SpinnerStyle
	fixed a bug where ListableEditor was returning null alarms (said invalid repeat type, but the check for validity was wrong)
	checked for null Alarm in ListableEditor:onCreate()
	renamed alarmNameInput and folderNameInput (in alarm_editor and folder_editor respectively) to nameInput
	renamed activity_alarm_editor_copy to activity_alarm_editor and deleted the original 
	changed activity_folder_editor to LinearLayout as well 
	added documentation to ListableEditor:onItemSelected()
	created header "Other Inputs" in activity_alarm_editor

2021/04/04
	created alarmDaysInput in activity_alarm_editor
	renamed CreatorInputStyle and CreatorLabelStyle to EditorInputStyle and EditorLabelStyle
	renamed marginSize (16dp) to marginSizeDefault, marginSizeSmall (4dp) to marginSizeSuperSmall, and added marginSizeSmall (8dp)
	changed marginSizeDefault to marginSizeSmall in ButtonStyle 
	edited ToDo list 
	added headers to values/styles 
	created alarmDateInput (component in activity_alarm_editor) and DatePickerStyle (style)
	added ListableEditor:changeRepeatType()
	bug found: DatePicker scroll doesn't scroll (ScrollView scrolls instead)
		tried to use a NestedScrollView instead of the ScrollView (failed)
		could perhaps use https://stackoverflow.com/questions/42293925/how-to-scroll-datepicker-when-placed-in-a-scrollview 
		not going to fix right now 
	created EditorOffsetInputStyle
	created alarmOffsetDays, alarmOffsetHours, and alarmOffsetMins in activity_alarm_editor
	created alarm_weeks_strings (string array)
	restructured ListableEditor:onItemSelected() to allow multiple spinners 
	created weeks spinner and added weeks spinner code in ListableEditor:onCreate() 

2021/04/07
	created the number picker for alarmDayOfMonth
	added month strings + month string array 
	created alarmMonthsInput (LinearLayout full of TextViews for month strings)
	broke up the alarmMonthsInput into two linear layouts nested within it (broke into two rows of strings)
	separated ListableEditor:onCreate() into multiple methods (REQ-specific field assignments, alarm/folder UI assignments)
		did NOT make methods for REQ-specific UI assignments 
	created more view handles in ListableEditor (to the various repeat type views)
	made the repeat type views (ListableEditor) show/hide themselves based on type 

2021/04/10
	added quotes around strings where we want leading/trailing spaces
	added behavior in Alarm:getRepeatString() for the rest of the repeat types 
	created section for repeat types in string resources 
	renamed alarm_weeks_strings to alarm_week_strings
	renamed alarm_editor_months to alarm_month_strings
	renamed alarm_editor_days to alarm_day_strings
	created alarm_editor_days_<NUM>_long and renamed originals to alarm_editor_days_<NUM>_short
	added Alarm:repeatWeek (specifies which week to ring)
	renamed repeat types 
		deleted the "PER" in all that had it (ex. PER_OFFSET became OFFSET)
		changed PER_DAY to DAY_WEEKLY (more descriptive)
		changed in code and on papers 
	deleted copy constructors for Alarm and AlarmGroup 
	changed the dummy data (made them all different repeat types, added some new ones, added a nested folder)
	added space and separator strings 
	added some methods for getting repeat display strings in Alarm (getDaysDisplayStringShort(), getExceptionMonthsString(), getOffsetString())

2021/04/11
	added a check in Alarm:setListableName() to check for tab characters 
		deleted corresponding ToDo list item
	added some error messages to set methods in Alarm (setListableName, setAlarmTimeCalendar, setRepeatDays, setOffsetMins, setOffsetHours, setOffsetDays)
	made parallel changes to AlarmGroup as the above two entries
	changed implementation of Alarm constructor with titles given at initialization
	added to the paper pg 2 section "Time Storage (Alarms)"
	created the key at the top of the dev log, replaced occurrences of things in the key (that were't replaced before because they were before I started referring to them as that)
	created the paper guidelines at the top of the dev log 
	added documentation to Alarm:name and AlarmGroup:name 
	added error message to AlarmGroup methods: addListable(), setListablesInside()
	added null checks in setListablesInside()
	created JavaTester (for general Java testing)
	edited Alarm:toEditString() to accommodate extra repeat info 
	edited Alarm:fromEditString() to accommodate extra repeat info 
	removed the very sketchy methods without contexts in Alarm and AlarmGroup
		for the unit tests, instead used nulls in place of the sketchy methods 
	changed the alarmDateOfMonth in alarm_editor to a LinearLayout instead (added some text around it)
	messed around with styles to hopefully get stuff center aligned vertically 
	added a check in ListableEditor:onCreate() for null workingListable
	fixed some errors in storing repeat type data for DAY_MONTHLY

2021/04/12
	changed ONCE_REL to have the same storage behavior as OFFSET in Alarm 
	set minimum date of alarmDatePicker in ListableEditor 
	edited paper pg 2
	swapped view ids for tags (for days and months in ListableEditor, starts at 0)
	added weekClicked() and monthClicked() to ListableEditor 
	created ListableEditor:getAllChildren()
	made ListableEditor update offset fields with correct data 
	created dayOfWeekClicked() and monthClicked() in ListableEditor
	created section "Working with workingListable (ListableEditor)" on paper pg 2
	created Alarm:setRepeatMonths(int, bool) and Alarm:getRepeatMonths(int) 
	added activeTextColor and inactiveTextColor to attr
	added some new colors (grey, lightGrey, and changed darkGrey to veryDarkGrey)
	messed around with margins in LayoutEditor to get stuff baseline aligned 
	added getter/setter for Alarm:repeatWeek 
	added a new spinner with id alarmDayOfWeekInput to alarm_editor
	deleted Alarm:setAlarmTimeCalendar()
	made Calendar Alarm:ringTime not lenient
	found bug: when clicking on an offset alarm (ONCE_REL or OFFSET), will crash and return a resource not found error (says within ListableEditor on line 290)
		fixed error, interpreted the integers from offset days/hours/mins as a resource ID (then threw the resource not found error) so made them into strings

2021/04/17 
	changed Alarm:repeatDays and Alarm:repeatMonths to be initialized to all trues 
	encoded ONCE_ABS/DATE_YEARLY and ONCE_REL/OFFSET repeat information into workingListable (ListableEditor)
	added some more things to the key at the top of Dev Log 
	added Alarm:setAlarmTimeMillis() 
	ensured that days/hours/mins entered into offset fields (ListableEditor) conformed to the non-lenient Alarm fields 
	tightened up findViewById searches in ListableEditor:alarmUISetup()
	encoded DAY_WEEKLY, DATE_MONTHLY, DAY_MONTHLY repeat info into workingListable (ListableEditor)
	changed ToDo list 
	added behavior to ListableEditor:onItemSelected() (for spinners) for alarmWeekOfMonthInput and alarmDayOfWeekInput 
	added "Static Methods" separator in Alarm and AlarmGroup 
	added Alarm:updateRingTime() + documentation
		implemented for everything except DAY_MONTHLY and DATE_YEARLY
		implemented partially for DAY_WEEKLY

2021/04/18
	implemented Alarm:updateRingTime() for DAY_WEEKLY, DAY_MONTHLY, and DATE_YEARLY
	changed ListableEditor:saveAlarm() for OFFSET to ensure it doesn't double count the offset (don't change anything in saveAlarm(), let Alarm:updateRingTime() do it)
	tested Alarm:updateRingTime() for all repeat types  
	forgot to parse for Alarm:repeatWeek in edit string (fixes a bug where will always show that the alarm rings on the first week of the month)
	changed Alarm:ringTime documentation 
	created folder_icon.xml
	deleted colorAccent in theme files (+ the related colors in colors)
	added colorSecondary to theme
	changed button text color (in style) to colorOnPrimary (since the background is colorPrimary after all)
		also made ButtonStyle.Borderless text color to colorOnBackground (are technically different)
	changed the main colors of the app from purples to blues
	edited ToDo list 
	Sylvia helped with folder icon design 
	created folder_icon_rotation (animated vector drawable)
	created folder_icon_paper_1 and folder_icon_paper_2 (animators) 

2021/04/22
	renamed folder_icon_paper_1 and folder_icon_paper_2 to folder_paper_1_out and folder_paper_2_out
	renamed folder_icon_rotation to folder_open_animation
	added onClick listeners to Holder:switch_view and Holder:image_view 
	changed Holder:onClick() to accommodate new onClick listeners
	created AlarmGroup:refreshLookup() and Adapter:refreshLookup()
	copied folder animators and drawable to create closing effect
	added some functionality to Holder:onClick()
	created folder_icon_closed and renamed folder_icon to folder_icon_opened (static open/close)
	created folderAnimationTimeLong and folderAnimationTimeShort (dimens)
		made them into integers (a separate type, also put in dimens file)
	created minImageSize (dimen)
	added more fields to Holder (static fields that store open and close animation drawables)
	added complete functionality to Holder:onclick() for clicking on the image view 
	added a check in AlarmGroup:generateLookup() to refresh the lookups of inner listables 
	created Adapter:datasetChanged field (+ setter method), used to see whether we need to refresh the lookup
	added check in Adapter:getListableAbs() for invalid index 
	added check in AlarmGroup:getListablesLookup() for isOpen 
	added section "Default Config (Alarm List)" on paper pg 2
	found a bug that makes Adapter:datasetLookup null for some reason
		occurs right when the dataset is initialized
		had to do with how refreshLookup() worked (wouldn't run if the datasetChanged was false, which is what it is originally)
	found another bug: RecyclerView is scrolling when we call a notify dataset changed method again --> causes an exception
		we call it when it needs the item count (so when it's scrolling...)
		not fixed yet 

2021/04/24
	removed call to Adapter:refreshLookup() in onBindViewHolder() and added it to Holder:onClick() instead 
	removed Adapter:datasetChanged since it isn't used anymore 
	use refreshLayout() when changing something, not when getting it 
		applied this on AlarmGroup methods (already done for Adapter methods)
	OH MY GAWD FOLDER CLOSING WORKS
	when binding a new AlarmGroup to a Holder, checked for open/closed state (and set anims accordingly)
		need to make opening/closing folders a more bounded change notification, or else everything gets rebound and we don't see any folder animations at all 
		my solution: start animations only after it's bound, and assume the open status is correct (has the side effect that all animations reset when anything is opened/closed)
	added to Adapter:datasetLookup documentation 

2021/04/28
	fixed a bug making the app crash if there were any empty offset fields 
	created getNextRingingAlarm() and setNextAlarmToRing() in Adapter 
		didn't finish implementing setNextAlarmToRing()

2021/05/01
	created AlarmRingingActivity
	added REQ_SHOW_ALARM to MainActivity 
	finished implementing Adapter:setNextAlarmToRing()
		did NOT test yet 
	added Alarm:updateRingTime() to set methods in Alarm
	added a check in Adapter:addListable() for updating datasetLookup 
	created Frag:onListableCreatorResult() and moved stuff from MainActivity:onActivityResult() to it 
	added null check to next alarm in Adapter:setNextAlarmToRing()
	renamed package to LarmLarms (from AlarmsButBetter)
	added Listable:isActive() check for alarms in Adapter:getNextRingingAlarm()

2021/05/02
	created AlarmRingingService 
	changed the icon for the (MainActivity) add folder button to folder_icon_closed 
	added Adapter:createNotifChannel() and a string for it (notif_channel_name)
	deleted MainActivity:REQ_SHOW_ALARM 

2021/05/08
	added some extra attributes (android:taskAffinity and android:excludeFromRecents) to AlarmRingingActivity
	added category for notification in AlarmRingingService for AlarmRingingActivity
	uncommented the keyguard dismissal block in AlarmRingingActivity
	renamed AlarmRingingService to NotificationService 
	installed Git
		after Git is integrated into my workflow, I will no longer use this txt file for logging purposes
